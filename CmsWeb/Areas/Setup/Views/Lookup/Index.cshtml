@model IEnumerable<CmsWeb.Areas.Setup.Controllers.LookupController.Row>
@{
    Layout = ViewExtensions2.TouchPointLayout();
    ViewBag.Title = "Lookup Codes";
    ViewBag.PageHeader = @ViewData["description"];
}
@section head{
    @Fingerprint.Css("/Content/touchpoint/lib/bootstrap-editable/css/bootstrap-editable.css")
}
<div class="row">
    <div class="col-lg-8">
        <div class="alert alert-info alert-dismissible">
            <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
            Click to edit the Code or Name. The items that cannot be deleted are expected to be there by the system. The description for those can be edited as long as the meaning is the same. Please use a 2 or 3-digit number for the ID.
        </div>
        <div class="box  box-responsive">
            <div class="box-title-btn">
                <div class="box-tools">
                    @if (ViewData["LinkValue"] != null && ViewData["LinkText"] != null)
                    {
                        <a href="@ViewData["LinkValue"]" class="btn btn-default"><i class="fa fa-info-circle"></i> @ViewData["LinkText"]</a>
                    }
                    <a href="/Lookups" class="btn btn-default"><i class="fa fa-arrow-circle-left"></i> Back to List</a>&nbsp;
                    @if (ViewData["HideAdd"] == null || (bool)ViewData["HideAdd"] == false)
                    {
                        <a href="#" class="btn btn-success create-new"><i class="fa fa-plus-circle"></i> Add @ViewData["description"]</a>
                    }
                </div>
            </div>
            <div class="box-content">
                <div class="table-responsive">
                    <table class="table table-striped table-responsive">
                        <tr>
                            <th style="width: 100px;">Id</th>
                            <th style="width: 300px;">Code</th>
                            <th style="width: 300px;">Description</th>
                            <th style="width: 50px;">Action</th>
                        </tr>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td style="width: 100px;">@item.Id<a href="#" id="@item.Id"></a></td>
                                <td style="width: 300px;">
                                    @if (item.Hardwired.GetValueOrDefault())
                                    {
                                        @item.Code
                                    }
                                    else
                                    {
                                        <a href="#" id="c@(item.Id).@ViewData["type"]" class="clickEdit" data-pk="c@(item.Id).@ViewData["type"]">@item.Code</a>
                                    }
                                </td>
                                <td style="width: 300px;">
                                    <a href="#" id="t@(item.Id).@ViewData["type"]" class="clickEdit" data-pk="t@(item.Id).@ViewData["type"]">@item.Description</a>
                                </td>
                                <td style="width: 50px;">
                                    @if (!item.Hardwired.GetValueOrDefault())
                                    {
                                        <a id='d@(item.Id)' href="#" class="delete btn btn-sm btn-danger"><i class="fa fa-trash"></i> Delete</a>
                                    }
                                </td>
                            </tr>
                        }
                    </table>
                </div>
                @if (ViewData["HideAdd"] == null || (bool)ViewData["HideAdd"] == false)
                {
                    <a href="#" class="btn btn-success btn-block visible-xs-block create-new"><i class="fa fa-plus-circle"></i> Add @ViewData["description"]</a>
                }
                <a href="/Lookups" class="btn btn-default btn-block visible-xs-block"><i class="fa fa-arrow-circle-left"></i> Back to List</a>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="new-modal">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            @using (Html.BeginForm("Create", "Lookup"))
            {
                @Html.Hidden("type", ViewData["type"])
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Add @ViewData["description"]</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="id" class="control-label">New Id</label>
                        <input type="number" id="id" name="id" class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="button" value="Cancel" class="btn btn-default" data-dismiss="modal" />
                    <input type="submit" value="Submit" class="btn btn-primary" />
                </div>
            }
        </div>
    </div>
</div>
@section scripts
{
    @Fingerprint.Script("/Content/touchpoint/lib/bootstrap-editable/js/bootstrap-editable.min.js")
    <script type="text/javascript">
        $(function () {
            $.fn.editableform.buttons = '<button type="submit" class="btn btn-primary btn-sm editable-submit">' +
                                            '<i class="fa fa-fw fa-check"></i>' +
                                        '</button>' +
                                        '<button type="button" class="btn btn-default btn-sm editable-cancel">' +
                                            '<i class="fa fa-fw fa-times"></i>' +
                                        '</button>';

            $(".clickEdit").editable({
                mode: 'inline',
                type: 'text',
                url: "/Lookup/Edit/",
                params: function (params) {
                    var data = {};
                    data['id'] = params.pk;
                    data['value'] = params.value;
                    return data;
                }
            });

            $("a.delete").click(function (e) {
                e.preventDefault();
                var id = $(this).attr("id");
                var type = $('#type').val();
                swal({
                    title: "Are you sure?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn-danger",
                    confirmButtonText: "Yes, delete it!",
                    closeOnConfirm: false
                },
                function () {
                    $.post("/Lookup/Delete/" + id, { type: type }, function (ret) {
                        if (ret && ret.error)
                            swal("Error!", ret.error, "error");
                        else {
                            swal({
                                title: "Deleted!",
                                type: "success"
                            },
                            function () {
                                window.location = "/Lookup/" + $('#type').val();
                            });
                        }
                    });
                });
            });

            $("a.create-new").click(function (ev) {
                ev.preventDefault();
                $('#new-modal').modal();
                return false;
            });

            $('#new-modal').on('shown.bs.modal', function () {
                $("#id").val('').focus();
            });

            // positions scrollbar and highlights new setting.
            var hash = document.location.hash;
            if (hash) {
                var offset = $(hash).offset();
                offset.top -= 80;
                $('body').animate({ scrollTop: offset.top }, 500);

                var row = $(hash).closest('tr');
                var bgColor = $(row).css('background-color');
                $(row).animate({ backgroundColor: '#eaab00' }, 1000, function () {
                    $(row).animate({ backgroundColor: bgColor }, 1000);
                });
            }
        });
    </script>
}
